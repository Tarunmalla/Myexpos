//load int 10 into memory
loadi(22,35);
loadi(23,36);

//load init code
loadi(65,7);
loadi(66,8);

//load idle code
loadi(69,11);
loadi(70,12);

//load library
loadi(63,13);
loadi(64,14);

//int 7
loadi(16,29);
loadi(17,30);

//timer
loadi(4, 17);
loadi(5, 18);

//exception handler
loadi(2, 15);
loadi(3, 16);

PTBR=PAGE_TABLE_BASE;
[PROCESS_TABLE+11]=82;
[PROCESS_TABLE+1]=0;
[PROCESS_TABLE+4]=CREATED;
[PROCESS_TABLE+14]=PTBR;
[PROCESS_TABLE+15]=20;
PTLR =20;

[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";
//Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

//Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = 70;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

[PROCESS_TABLE+11+16]=80;
[PROCESS_TABLE+1+16]=1;
[PROCESS_TABLE+4+16]=RUNNING;

[PTBR+20] = 63;
[PTBR+21] = "0100";
[PTBR+22] = 64;
[PTBR+23] = "0100";

//Heap
[PTBR+24] = 78;
[PTBR+25] = "0110";
[PTBR+26] = 79;
[PTBR+27] = "0110";

//Code
[PTBR+28] = 65;
[PTBR+29] = "0100";
[PTBR+30] = 66;
[PTBR+31] = "0100";
[PTBR+32] = -1;
[PTBR+33] = "0000";
[PTBR+34] = -1;
[PTBR+35] = "0000";

//Stack
[PTBR+36] = 76;
[PTBR+37] = "0110";
[PTBR+38] = 77;
[PTBR+39] = "0110";

[PROCESS_TABLE+13]=8*512;
[PROCESS_TABLE+12]=0;
[81 * 512] = [69*512 + 1];

[PROCESS_TABLE+16+13]=18*512;
[PROCESS_TABLE+14+16]=PTBR;
[PROCESS_TABLE+15+16]=20;
[76*512] = [65*512 + 1];

SP=18*512;
PTBR=PAGE_TABLE_BASE;
[SYSTEM_STATUS_TABLE+1]=1;
ireturn;


