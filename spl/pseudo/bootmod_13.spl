//code from disk to mem
loadi(65,7);
loadi(66,8);

//proces1 to mem
loadi(83,69);
loadi(84,70);

//int 10
loadi(22,35);
loadi(23,36);

//int 7
loadi(16,29);
loadi(17,30);

//timer
loadi(4, 17);
loadi(5, 18);

//exception handler
loadi(2, 15);
loadi(3, 16);

//library
loadi(63,13);
loadi(64,14);

PTBR = PAGE_TABLE_BASE+20;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

//Code
[PTBR+8] = 83;
[PTBR+9] = "0100";
[PTBR+10] = 84;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 85;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

PTBR=PAGE_TABLE_BASE+40;

[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

PTBR=PAGE_TABLE_BASE+20;
[PROCESS_TABLE+1+16]=2;
[PROCESS_TABLE+4+16]=CREATED;
[PROCESS_TABLE+11+16]=86;
[PROCESS_TABLE+16+13]=8*512;
[PROCESS_TABLE+16+12]=0;
[PROCESS_TABLE+16+14]=PTBR;
[PROCESS_TABLE+16+15]=10;
[85 * 512] = [83*512 + 1];

[PROCESS_TABLE+32+1]=1;
[PROCESS_TABLE+32+4]=CREATED;
[PROCESS_TABLE+32+11]=80;
[PROCESS_TABLE+32+13]=8*512;
[PROCESS_TABLE+32+14]=PTBR+20;
[PROCESS_TABLE+32+15]=10;
PTBR=PAGE_TABLE_BASE+40;
PTLR=10;
[76*512] = [65*512 + 1];
return; 
